/* Primitives: form controls & inputs */
@layer components {
  .form-control {
    @apply appearance-none rounded border border-term-border bg-transparent px-2 py-1 text-[13px] outline-none transition disabled:cursor-not-allowed disabled:opacity-60;
    line-height: 1.25;
  }
  .form-control:focus {
    @apply border-term-accent ring-1 ring-term-accent;
  }
  .form-control::placeholder {
    @apply text-term-dim;
  }
  input[type='text'],
  input[type='password'],
  input[type='email'],
  input[type='search'],
  input[type='number'],
  input[type='url'],
  input[type='tel'],
  select,
  textarea {
    @apply appearance-none rounded border border-term-border bg-transparent px-2 py-1 text-[13px] outline-none transition disabled:cursor-not-allowed disabled:opacity-60;
    line-height: 1.25;
  }
  input[type='text']:focus,
  input[type='password']:focus,
  input[type='email']:focus,
  input[type='search']:focus,
  input[type='number']:focus,
  input[type='url']:focus,
  input[type='tel']:focus,
  select:focus,
  textarea:focus {
    @apply border-term-accent ring-1 ring-term-accent;
  }
  input[type='text']::placeholder,
  input[type='password']::placeholder,
  input[type='email']::placeholder,
  input[type='search']::placeholder,
  input[type='number']::placeholder,
  input[type='url']::placeholder,
  input[type='tel']::placeholder,
  textarea::placeholder {
    @apply text-term-dim;
  }
  /* Generic semantic aliases */
  .input,
  .input-term {
    @apply flex-1 appearance-none rounded border border-term-border bg-transparent px-2 py-1 text-[13px] outline-none transition disabled:cursor-not-allowed disabled:opacity-60;
    line-height: 1.25;
  }
  .select,
  .select-term {
    @apply flex-1 appearance-none rounded border border-term-border bg-transparent px-2 py-1 text-[13px] outline-none transition disabled:cursor-not-allowed disabled:opacity-60 pr-6;
    line-height: 1.25;
  }
  .textarea,
  .textarea-term {
    @apply flex-1 appearance-none rounded border border-term-border bg-transparent px-2 py-1 text-[13px] outline-none transition disabled:cursor-not-allowed disabled:opacity-60 min-h-[90px];
    line-height: 1.25;
    resize: vertical;
  }
  .input-sm,
  .input-term-sm,
  .form-control-sm {
    @apply px-1.5 py-0.5 text-[12px];
  }
  select.input-sm,
  select.input-term-sm,
  select.form-control-sm,
  .select.input-sm,
  .select.input-term-sm,
  .select.form-control-sm,
  .select-term.input-sm,
  .select-term.input-term-sm,
  .select-term.form-control-sm {
    @apply pr-6;
  }
  .input-lg,
  .input-term-lg,
  .form-control-lg {
    @apply px-3 py-2 text-[14px];
  }
  .input-invalid,
  .form-control:invalid {
    @apply border-red-500/60 focus:border-red-500 focus:ring-1 focus:ring-red-500;
  }
  .form-hint {
    @apply mt-1 text-[11px] text-term-dim;
  }
  .field-row {
    @apply grid grid-cols-[10rem_1fr] items-start gap-3;
  }
  .field-error {
    @apply mt-1 text-[11px] text-red-400;
  }
  /* Autofill */
  input.form-control:-webkit-autofill,
  input:-webkit-autofill {
    -webkit-box-shadow: 0 0 0 1000px var(--panel-bg) inset !important;
    -webkit-text-fill-color: var(--color-text) !important;
    caret-color: var(--accent-color);
    transition: background-color 9999s ease-out 0s;
  }
  /* Number spinners */
  input[type='number']::-webkit-outer-spin-button,
  input[type='number']::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
  }
  input[type='number'] {
    -moz-appearance: textfield;
  }
  /* Select arrow */
  select,
  .select,
  .select-term {
    background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='20' height='20' viewBox='0 0 20 20' fill='none' stroke='%2399a2ad' stroke-width='1.5' stroke-linecap='round' stroke-linejoin='round'><path d='M6 8l4 4 4-4'/></svg>");
    background-repeat: no-repeat;
    background-position: right 0.45rem center;
    background-size: 0.95rem;
  }
  select:focus,
  .select:focus,
  .select-term:focus {
    background-color: transparent;
  }
  /* Range (generic selector & .range class variants) */
  input[type='range'] {
    -webkit-appearance: none;
    width: 100%;
    height: 1.25rem;
    background: transparent;
    padding: 0;
    margin: 0;
  }
  input[type='range']:focus {
    outline: none;
  }
  input[type='range']::-webkit-slider-runnable-track,
  .range::-webkit-slider-runnable-track {
    height: 4px;
    border-radius: 2px;
    background: color-mix(in srgb, var(--border-color) 55%, transparent);
  }
  input[type='range']::-moz-range-track,
  .range::-moz-range-track {
    height: 4px;
    border-radius: 2px;
    background: color-mix(in srgb, var(--border-color) 55%, transparent);
  }
  input[type='range']::-webkit-slider-thumb,
  .range::-webkit-slider-thumb {
    -webkit-appearance: none;
    height: 14px;
    width: 14px;
    margin-top: -5px;
    border-radius: 50%;
    background: var(--panel-header-bg);
    border: 1px solid var(--border-color);
    box-shadow:
      0 0 0 1px rgba(0, 0, 0, 0.3),
      0 2px 4px rgba(0, 0, 0, 0.4);
    transition:
      background 0.15s ease,
      transform 0.15s ease,
      border-color 0.2s ease;
    cursor: pointer;
  }
  input[type='range']::-moz-range-thumb,
  .range::-moz-range-thumb {
    height: 14px;
    width: 14px;
    border-radius: 50%;
    background: var(--panel-header-bg);
    border: 1px solid var(--border-color);
    box-shadow:
      0 0 0 1px rgba(0, 0, 0, 0.3),
      0 2px 4px rgba(0, 0, 0, 0.4);
    transition:
      background 0.15s,
      transform 0.15s,
      border-color 0.2s;
    cursor: pointer;
  }
  input[type='range']:hover::-webkit-slider-thumb,
  input[type='range']:hover::-moz-range-thumb,
  .range:hover::-webkit-slider-thumb,
  .range:hover::-moz-range-thumb {
    background: color-mix(in srgb, var(--panel-header-bg) 80%, transparent);
  }
  input[type='range']:active::-webkit-slider-thumb,
  input[type='range']:active::-moz-range-thumb,
  .range:active::-webkit-slider-thumb,
  .range:active::-moz-range-thumb {
    transform: scale(0.92);
    background: color-mix(in srgb, var(--accent-color) 30%, transparent);
    border-color: var(--accent-color);
  }
  input[type='range']:focus::-webkit-slider-thumb,
  input[type='range']:focus::-moz-range-thumb,
  .range:focus::-webkit-slider-thumb,
  .range:focus::-moz-range-thumb {
    border-color: var(--accent-color);
    box-shadow:
      0 0 0 2px color-mix(in srgb, var(--accent-color) 40%, transparent),
      0 0 0 1px var(--accent-color);
  }
  input[type='range']:disabled::-webkit-slider-thumb,
  input[type='range']:disabled::-moz-range-thumb,
  .range:disabled::-webkit-slider-thumb,
  .range:disabled::-moz-range-thumb {
    background: color-mix(in srgb, var(--panel-header-bg) 40%, transparent);
    border-color: color-mix(in srgb, var(--border-color) 60%, transparent);
    box-shadow: none;
    cursor: not-allowed;
  }
  input[type='range']::-webkit-slider-runnable-track:active {
    background: color-mix(in srgb, var(--accent-color) 50%, transparent);
  }
  input[type='range']::-moz-range-progress {
    height: 4px;
    border-radius: 2px;
    background: color-mix(in srgb, var(--accent-color) 55%, transparent);
  }
  .range {
    @apply w-full cursor-pointer;
    -webkit-appearance: none;
    background: transparent;
    height: 1.4rem;
    padding: 0;
    margin: 0;
  }
  .range-sm {
    height: 1.1rem;
  }
  .range-sm::-webkit-slider-runnable-track,
  .range-sm::-moz-range-track {
    height: 3px;
  }
  .range-sm::-webkit-slider-thumb {
    height: 12px;
    width: 12px;
    margin-top: -4.5px;
  }
  .range-sm::-moz-range-thumb {
    height: 12px;
    width: 12px;
  }
  .range-wrapper {
    @apply relative w-full select-none;
  }
  .range-vertical {
    @apply relative h-40 w-6 flex items-center justify-center;
  }
  .range-vertical .range {
    writing-mode: bt-lr;
    -webkit-appearance: slider-vertical;
    width: 1.4rem;
    height: 100%;
  }
  .range-vertical .range[orient='vertical'] {
    transform: rotate(-90deg);
    width: 100%;
    height: 1.4rem;
  }
  .range-bubble {
    @apply absolute -top-2 translate-y-[-100%] rounded px-1.5 py-0.5 text-[11px] font-mono border;
    background: var(--panel-header-bg);
    border-color: var(--border-color);
    color: var(--color-text-dim);
    pointer-events: none;
    white-space: nowrap;
  }
  .range-bubble::after {
    content: '';
    position: absolute;
    left: 50%;
    top: 100%;
    transform: translateX(-50%);
    width: 6px;
    height: 6px;
    background: inherit;
    border: inherit;
    border-top: 0;
    border-left: 0;
    transform-origin: center;
    rotate: 45deg;
  }
  .range-bubble-accent {
    color: var(--accent-color);
  }
  .dual-range {
    @apply relative w-full h-6 select-none;
  }
  .dual-range .range {
    position: absolute;
    left: 0;
    top: 0;
    height: 100%;
    background: transparent;
  }
  .dual-range-track-overlay {
    position: absolute;
    left: 0;
    top: 50%;
    height: 4px;
    transform: translateY(-50%);
    width: 100%;
    border-radius: 2px;
    background: color-mix(in srgb, var(--border-color) 55%, transparent);
  }
  .dual-range-track-active {
    position: absolute;
    top: 50%;
    height: 4px;
    transform: translateY(-50%);
    border-radius: 2px;
    background: color-mix(in srgb, var(--accent-color) 70%, transparent);
  }
  .dual-range.range-sm .dual-range-track-overlay {
    height: 3px;
  }
  .dual-range.range-sm .dual-range-track-active {
    height: 3px;
  }
  /* Prompt line */
  .prompt-line {
    display: grid;
    grid-template-columns: 1.25rem auto 1fr;
    align-items: center;
    gap: 0.5rem;
    padding: 0.35rem 0;
  }
  .prompt-line .chevron {
    color: var(--accent-color);
  }
  .prompt-line label {
    color: var(--color-text-dim);
    font-size: 13px;
  }
  .prompt-line input,
  .prompt-line textarea {
    background: transparent;
    border: none;
    border-bottom: 1px dashed rgba(127, 127, 127, 0.25);
    padding: 4px 2px 3px 2px;
    color: inherit;
    caret-color: var(--accent-color);
    font-family: inherit;
    font-size: 13px;
  }
  .prompt-line input:focus,
  .prompt-line textarea:focus {
    outline: none;
    border-bottom: 1px solid var(--accent-color);
  }
  .prompt-line input:disabled,
  .prompt-line textarea:disabled {
    opacity: 0.6;
  }
  /* Checkboxes & Radios */
  input[type='checkbox'],
  input[type='radio'],
  .checkbox,
  .radio {
    -webkit-appearance: none;
    appearance: none;
    display: inline-grid;
    place-content: center;
    margin: 0;
    width: 1.05rem;
    height: 1.05rem;
    border: 1px solid var(--border-color);
    background: color-mix(in srgb, var(--panel-bg) 90%, transparent);
    box-shadow: 0 0 0 0 transparent;
    cursor: pointer;
    line-height: 1;
    transition:
      background-color 0.15s ease,
      border-color 0.15s ease,
      box-shadow 0.2s ease,
      color 0.15s ease;
    position: relative;
  }
  input[type='checkbox'],
  .checkbox {
    border-radius: 4px;
  }
  input[type='radio'],
  .radio {
    border-radius: 50%;
  }
  input[type='checkbox']:hover,
  input[type='radio']:hover,
  .checkbox:hover,
  .radio:hover {
    background: color-mix(in srgb, var(--panel-bg) 70%, var(--accent-color) 8%);
    border-color: color-mix(in srgb, var(--border-color) 75%, var(--accent-color) 25%);
  }
  input[type='checkbox']:focus-visible,
  input[type='radio']:focus-visible,
  .checkbox:focus-visible,
  .radio:focus-visible {
    outline: none;
    box-shadow:
      0 0 0 2px color-mix(in srgb, var(--accent-color) 45%, transparent),
      0 0 0 1px var(--accent-color);
    border-color: var(--accent-color);
  }
  input[type='checkbox']::after,
  .checkbox::after {
    content: '';
    width: 70%;
    height: 70%;
    transform: scale(0) rotate(10deg);
    transition: transform 0.18s cubic-bezier(0.4, 0, 0.2, 1);
    background: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='18' height='18' viewBox='0 0 20 20' fill='none' stroke='%23fff' stroke-width='2.2' stroke-linecap='round' stroke-linejoin='round'><path d='M5 10.5 8.5 14 15 6.5'/></svg>")
      center/18px 18px no-repeat;
  }
  input[type='radio']::after,
  .radio::after {
    content: '';
    width: 55%;
    height: 55%;
    border-radius: 50%;
    background: #fff;
    transform: scale(0);
    transition: transform 0.18s cubic-bezier(0.4, 0, 0.2, 1);
  }
  input[type='checkbox']:checked,
  .checkbox:checked,
  input[type='radio']:checked,
  .radio:checked {
    background: var(--accent-color);
    border-color: var(--accent-color);
  }
  input[type='checkbox']:checked::after,
  .checkbox:checked::after,
  input[type='radio']:checked::after,
  .radio:checked::after {
    transform: scale(1);
  }
  input[type='checkbox']:indeterminate,
  .checkbox:indeterminate {
    background: var(--accent-color);
    border-color: var(--accent-color);
  }
  input[type='checkbox']:indeterminate::after,
  .checkbox:indeterminate::after {
    content: '';
    width: 60%;
    height: 2px;
    background: #fff;
    border-radius: 2px;
    transform: scale(1);
  }
  input[type='checkbox']:disabled,
  input[type='radio']:disabled,
  .checkbox:disabled,
  .radio:disabled {
    opacity: 0.55;
    cursor: not-allowed;
    background: color-mix(in srgb, var(--panel-bg) 70%, var(--border-color) 15%);
  }
  .checkbox-sm,
  .radio-sm {
    width: 0.85rem;
    height: 0.85rem;
  }
  .checkbox-sm::after {
    background-size: 14px 14px;
  }
  .checkbox-lg,
  .radio-lg {
    width: 1.3rem;
    height: 1.3rem;
  }
  .checkbox-lg::after {
    background-size: 22px 22px;
  }
  .choice-group {
    display: flex;
    flex-wrap: wrap;
    gap: 0.6rem 1rem;
    align-items: center;
  }
  .choice-item {
    display: inline-flex;
    align-items: center;
    gap: 0.45rem;
    font-size: 13px;
    line-height: 1.2;
    cursor: pointer;
  }
  .choice-item input[type='checkbox'],
  .choice-item input[type='radio'] {
    flex-shrink: 0;
  }
}
